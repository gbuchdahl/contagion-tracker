{"version":3,"sources":["components/Banner.js","components/Slider.js","components/LinearGradient.js","components/wordcloud2.js","components/WordCloud.js","components/USModalCard.js","components/USMap.js","components/CountryModalCard.js","components/WorldMap.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Banner","className","sleep","ms","Promise","resolve","setTimeout","Slider","props","handleSlider","e","a","setState","playing","update","target","value","val","state","speed","bind","handlePlay","this","start","parseInt","i","num_days","new_val","Column","step","min","max","type","onChange","onClick","Component","LinearGradient","data","boxStyle","width","margin","gradientStyle","backgroundImage","fromColor","toColor","height","style","title","isSupported","canvas","document","createElement","getContext","ctx","getImageData","fillText","Array","prototype","some","push","minFontSize","hanWidth","mWidth","size","font","toString","measureText","shuffleArray","arr","j","x","length","Math","floor","random","WordCloud","elements","options","window","setImmediate","msSetImmediate","webkitSetImmediate","mozSetImmediate","oSetImmediate","postMessage","addEventListener","callbacks","undefined","message","evt","substr","stopImmediatePropagation","id","clearImmediate","callback","fn","msClearImmediate","webkitClearImmediate","mozClearImmediate","oClearImmediate","timer","clearTimeout","isArray","forEach","el","getElementById","tagName","appendChild","settings","list","fontFamily","fontWeight","color","minSize","weightFactor","clearCanvas","backgroundColor","gridSize","drawOutOfBound","shrinkToFit","origin","drawMask","maskColor","maskGapWidth","wait","abortThreshold","abort","minRotation","PI","maxRotation","rotationSteps","shuffle","rotateRatio","shape","ellipticity","classes","hover","click","key","factor","pt","theta","sin","thetaPrime","cos","abs","sqrt","grid","ngx","ngy","center","maxRadius","escapeTime","getTextColor","getTextFontWeight","g","maskRectWidth","rotationRange","random_hsl_color","toFixed","getTextClasses","hovered","interactive","infoGrid","getInfoGridFromMouseTouchEvent","clientX","clientY","currentTarget","rect","getBoundingClientRect","touches","eventX","left","eventY","top","y","wordcloudhover","info","item","dimension","wordcloudclick","preventDefault","pointsAtRadius","getPointsAtRadius","radius","T","t","points","rx","exceedTime","Date","getTime","fillGridAt","fillRect","putWord","word","weight","attributes","rotateDeg","fontSize","mu","fcanvas","fctx","willReadFrequently","fw","fh","boxWidth","boxHeight","fgw","ceil","fgh","fillTextOffsetX","fillTextOffsetY","cgh","cgw","setAttribute","scale","translate","rotate","fillStyle","textBaseline","imageData","gy","occupied","gx","bounds","singleGridLoop","gw","gh","fillTextWidth","fillTextHeight","getTextInfo","r","tryToPutWordAtPoint","gxy","px","py","canFitText","distance","save","restore","span","transformRule","styleRules","position","display","lineHeight","whiteSpace","transform","webkitTransform","msTransform","transformOrigin","webkitTransformOrigin","msTransformOrigin","cssProp","textContent","attribute","drawText","w","h","updateGrid","concat","sendEvent","cancelable","details","event","CustomEvent","detail","dispatchEvent","loopingFunction","stoppingFunction","clearRect","bctx","bgPixel","webkitTapHighlightColor","stopInteraction","removeEventListener","listener","anotherWordCloudStart","loop","drawn","canceled","startDrawing","Cloud","updateCanvas","refs","ref","React","USModalCard","date","setDate","getDate","error","toDateString","slice","handle","new_cases","location","class","toLocaleString","total_cases","new_hospitalized","new_deaths","geoData","require","states","map","allStates","find","doc","offsets","VT","NH","MA","RI","CT","NJ","DE","MD","DC","epoch","NUM_DAYS","colorScaleDeaths","scaleLinear","domain","range","colorScaleCases","gradientDataDeaths","gradientDataCases","USMap","query_by_date","stat","getMonth","getYear","updateVal","newDate","fetchFills","toggleModal","setting","modal","generateData","toggleStat","forceUpdate","buildQuery","query","fetch","then","response","json","newData","gray","fill","fills","res","DPM_docs","deaths","new_deaths_per_million","cases","new_cases_per_million","aria-label","projection","zoom","geography","geographies","geo","index","rsmKey","stroke","onMouseEnter","onMouseLeave","centroid","geoCentroid","cur","s","Object","keys","indexOf","coordinates","textAnchor","subject","dx","dy","alignmentBaseline","CountryModalCard","code","total_cases_per_million","handleUSA","codes","country","WorldMap","setIndex","ind","switch","MyFooter","href","src","alt","App","useState","setLocation","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.a1d98197.chunk.js","sourcesContent":["import React from \"react\";\nimport { Hero, Container } from \"react-bulma-components\";\n\nconst Banner = () => {\n  return (\n    <Hero className=\"mb-5 is-warning is-bold is-medium\">\n      <Container className=\"hero-body has-text-centered\">\n        <h1 className=\"title is-size-1\">\n          <span className=\"icon mr-5\">\n            <i className=\"fas fa-radiation-alt\"></i>\n          </span>\n          Contagion Tracker\n          <span className=\"icon ml-5\">\n            <i className=\"fas fa-radiation-alt\"></i>\n          </span>\n        </h1>\n        <h3 className=\"subtitle is-size-5 has-text-grey mt-2\">\n          Visualizing \"viral\" trends across the world.\n        </h3>\n      </Container>\n    </Hero>\n  );\n};\n\nexport default Banner;\n","import React, { Component } from \"react\";\nimport { Columns, Button } from \"react-bulma-components\";\n\nfunction sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nclass Slider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      playing: false,\n      val: 0,\n      speed: 800,\n    };\n\n    this.handleSlider = this.handleSlider.bind(this);\n    this.handlePlay = this.handlePlay.bind(this);\n  }\n\n  handleSlider = async (e) => {\n    this.setState({ playing: false });\n    this.props.update(e.target.value);\n    this.setState({ val: e.target.value });\n  };\n\n  async handlePlay() {\n    let playing = this.state.playing;\n    // if it was paused before\n    if (!playing) {\n      this.setState({ playing: true, speed: 800 });\n      let start = parseInt(this.state.val);\n\n      // iterate until you get to present day\n      for (let i = 1; i < this.props.num_days - start; i++) {\n        let new_val = start + i;\n        this.props.update(new_val);\n        this.setState({ val: new_val });\n        // check to see if it should keep playing after it wakes up\n        await sleep(this.state.speed);\n        if (!this.state.playing) {\n          break;\n        }\n      }\n      this.setState({ playing: false });\n    } else {\n      // pause slider\n      this.setState({ playing: false });\n    }\n  }\n\n  render() {\n    return (\n      <Columns className=\"is-vcentered\">\n        <Columns.Column className=\"is-one-half\">\n          <input\n            className=\"slider is-large is-circle is-danger is-fullwidth\"\n            step=\"1\"\n            min=\"0\"\n            max={this.props.num_days}\n            value={this.state.val}\n            type=\"range\"\n            onChange={this.handleSlider}\n          />\n        </Columns.Column>\n        <Columns.Column className=\"is-one-quarter has-text-centered\">\n          <Button\n            onClick={this.handlePlay}\n            className=\"is-danger is-fullwidth has-text-weight-bold\"\n          >\n            <p>{this.state.playing ? \"Pause\" : \"Play\"}</p>\n          </Button>\n          {this.state.playing && (\n            <div className=\"field has-addons mt-2\">\n              <div className=\"columns is-fullwidth is-gapless\">\n                <p className=\"control column mx-0\">\n                  <button\n                    onClick={() => this.setState({ speed: 400 })}\n                    className={\n                      this.state.speed === 400 ? \"is-active button\" : \"button\"\n                    }\n                  >\n                    <span className=\"has-text-weight-bold\">x2</span>\n                  </button>\n                </p>\n                <p className=\"control column mx-0\">\n                  <button\n                    onClick={() => this.setState({ speed: 200 })}\n                    className={\n                      this.state.speed === 200 ? \"is-active button\" : \"button\"\n                    }\n                  >\n                    <span className=\"has-text-weight-bold\">x4</span>\n                  </button>\n                </p>\n                <p className=\"control columnmx-0\">\n                  <button\n                    onClick={() => this.setState({ speed: 100 })}\n                    className={\n                      this.state.speed === 100 ? \"is-active button\" : \"button\"\n                    }\n                  >\n                    <span className=\"has-text-weight-bold\">x8</span>\n                  </button>\n                </p>\n                <p className=\"control column  mx-0\">\n                  <button\n                    onClick={() => this.setState({ speed: 800 })}\n                    className={\n                      this.state.speed === 800 ? \"is-active button\" : \"button\"\n                    }\n                  >\n                    <span className=\"has-text-weight-bold\">x1</span>\n                  </button>\n                </p>\n              </div>\n            </div>\n          )}\n        </Columns.Column>\n      </Columns>\n    );\n  }\n}\n\nexport default Slider;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst LinearGradient = (props) => {\n  const { data } = props;\n  const boxStyle = {\n    width: 240,\n    margin: \"auto\",\n  };\n  const gradientStyle = {\n    backgroundImage: `linear-gradient(to right, ${data.fromColor} , ${data.toColor})`,\n    height: 20,\n  };\n  return (\n    <div>\n      <div style={boxStyle} className=\"columns my-0\">\n        <div className=\"column is-1\">{data.min}</div>\n        <span className=\"column is-10\"></span>\n        <span className=\"column is-1\">{data.max}</span>\n      </div>\n      <div style={{ ...boxStyle, ...gradientStyle }}></div>\n      <div style={boxStyle} className=\"has-text-centered mb-4\">\n        <span>{data.title}</span>\n      </div>\n    </div>\n  );\n};\n\nLinearGradient.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default LinearGradient;\n","/*!\n * wordcloud2.js\n * Edited from timdream/wordcloud2.js\n */\n\nvar pre_run = function () {\n  // setImmediate\n  if (!window.setImmediate) {\n    window.setImmediate = (function setupSetImmediate() {\n      return (\n        window.msSetImmediate ||\n        window.webkitSetImmediate ||\n        window.mozSetImmediate ||\n        window.oSetImmediate ||\n        (function setupSetZeroTimeout() {\n          if (!window.postMessage || !window.addEventListener) {\n            return null;\n          }\n\n          var callbacks = [undefined];\n          var message = \"zero-timeout-message\";\n\n          // Like setTimeout, but only takes a function argument.  There's\n          // no time argument (always zero) and no arguments (you have to\n          // use a closure).\n          var setZeroTimeout = function setZeroTimeout(callback) {\n            var id = callbacks.length;\n            callbacks.push(callback);\n            window.postMessage(message + id.toString(36), \"*\");\n\n            return id;\n          };\n\n          window.addEventListener(\n            \"message\",\n            function setZeroTimeoutMessage(evt) {\n              // Skipping checking event source, retarded IE confused this window\n              // object with another in the presence of iframe\n              if (\n                typeof evt.data !== \"string\" ||\n                evt.data.substr(0, message.length) !==\n                  message /* ||\n              evt.source !== window */\n              ) {\n                return;\n              }\n\n              evt.stopImmediatePropagation();\n\n              var id = parseInt(evt.data.substr(message.length), 36);\n              if (!callbacks[id]) {\n                return;\n              }\n\n              callbacks[id]();\n              callbacks[id] = undefined;\n            },\n            true\n          );\n\n          /* specify clearImmediate() here since we need the scope */\n          window.clearImmediate = function clearZeroTimeout(id) {\n            if (!callbacks[id]) {\n              return;\n            }\n\n            callbacks[id] = undefined;\n          };\n\n          return setZeroTimeout;\n        })() ||\n        // fallback\n        function setImmediateFallback(fn) {\n          window.setTimeout(fn, 0);\n        }\n      );\n    })();\n  }\n\n  if (!window.clearImmediate) {\n    window.clearImmediate = (function setupClearImmediate() {\n      return (\n        window.msClearImmediate ||\n        window.webkitClearImmediate ||\n        window.mozClearImmediate ||\n        window.oClearImmediate ||\n        // \"clearZeroTimeout\" is implement on the previous block ||\n        // fallback\n        function clearImmediateFallback(timer) {\n          window.clearTimeout(timer);\n        }\n      );\n    })();\n  }\n};\n\n// Check if WordCloud can run on this browser\nvar isSupported = (function isSupported() {\n  var canvas = document.createElement(\"canvas\");\n  if (!canvas || !canvas.getContext) {\n    return false;\n  }\n\n  var ctx = canvas.getContext(\"2d\");\n  if (!ctx) {\n    return false;\n  }\n  if (!ctx.getImageData) {\n    return false;\n  }\n  if (!ctx.fillText) {\n    return false;\n  }\n\n  if (!Array.prototype.some) {\n    return false;\n  }\n  if (!Array.prototype.push) {\n    return false;\n  }\n\n  return true;\n})();\n\nvar minFontSize = (function getMinFontSize() {\n  if (!isSupported) {\n    return;\n  }\n\n  var ctx = document.createElement(\"canvas\").getContext(\"2d\");\n\n  // start from 20\n  var size = 20;\n\n  // two sizes to measure\n  var hanWidth, mWidth;\n\n  while (size) {\n    ctx.font = size.toString(10) + \"px sans-serif\";\n    if (\n      ctx.measureText(\"\\uFF37\").width === hanWidth &&\n      ctx.measureText(\"m\").width === mWidth\n    ) {\n      return size + 1;\n    }\n\n    hanWidth = ctx.measureText(\"\\uFF37\").width;\n    mWidth = ctx.measureText(\"m\").width;\n\n    size--;\n  }\n\n  return 0;\n})();\n\n// Based on http://jsfromhell.com/array/shuffle\nvar shuffleArray = function shuffleArray(arr) {\n  for (\n    var j, x, i = arr.length;\n    i;\n    j = Math.floor(Math.random() * i), x = arr[--i], arr[i] = arr[j], arr[j] = x\n  ) {}\n  return arr;\n};\n\nvar WordCloud = function WordCloud(elements, options) {\n  pre_run();\n\n  if (!Array.isArray(elements)) {\n    elements = [elements];\n  }\n\n  elements.forEach(function (el, i) {\n    if (typeof el === \"string\") {\n      elements[i] = document.getElementById(el);\n      if (!elements[i]) {\n        throw \"The element id specified is not found.\";\n      }\n    } else if (!el.tagName && !el.appendChild) {\n      throw \"You must pass valid HTML elements, or ID of the element.\";\n    }\n  });\n\n  /* Default values to be overwritten by options object */\n  var settings = {\n    list: [],\n    fontFamily:\n      '\"Trebuchet MS\", \"Heiti TC\", \"微軟正黑體\", ' +\n      '\"Arial Unicode MS\", \"Droid Fallback Sans\", sans-serif',\n    fontWeight: \"normal\",\n    color: \"random-dark\",\n    minSize: 0, // 0 to disable\n    weightFactor: 1,\n    clearCanvas: true,\n    backgroundColor: \"#fff\", // opaque white = rgba(255, 255, 255, 1)\n\n    gridSize: 8,\n    drawOutOfBound: false,\n    shrinkToFit: false,\n    origin: null,\n\n    drawMask: false,\n    maskColor: \"rgba(255,0,0,0.3)\",\n    maskGapWidth: 0.3,\n\n    wait: 0,\n    abortThreshold: 0, // disabled\n    abort: function noop() {},\n\n    minRotation: -Math.PI / 2,\n    maxRotation: Math.PI / 2,\n    rotationSteps: 0,\n\n    shuffle: true,\n    rotateRatio: 0.1,\n\n    shape: \"circle\",\n    ellipticity: 0.65,\n\n    classes: null,\n\n    hover: null,\n    click: null,\n  };\n\n  if (options) {\n    for (var key in options) {\n      if (key in settings) {\n        settings[key] = options[key];\n      }\n    }\n  }\n\n  /* Convert weightFactor into a function */\n  if (typeof settings.weightFactor !== \"function\") {\n    var factor = settings.weightFactor;\n    settings.weightFactor = function weightFactor(pt) {\n      return pt * factor; //in px\n    };\n  }\n\n  /* Convert shape into a function */\n  if (typeof settings.shape !== \"function\") {\n    switch (settings.shape) {\n      case \"circle\":\n      /* falls through */\n      default:\n        // 'circle' is the default and a shortcut in the code loop.\n        settings.shape = \"circle\";\n        break;\n\n      case \"cardioid\":\n        settings.shape = function shapeCardioid(theta) {\n          return 1 - Math.sin(theta);\n        };\n        break;\n\n      /*\n        To work out an X-gon, one has to calculate \"m\",\n        where 1/(cos(2*PI/X)+m*sin(2*PI/X)) = 1/(cos(0)+m*sin(0))\n        http://www.wolframalpha.com/input/?i=1%2F%28cos%282*PI%2FX%29%2Bm*sin%28\n        2*PI%2FX%29%29+%3D+1%2F%28cos%280%29%2Bm*sin%280%29%29\n        Copy the solution into polar equation r = 1/(cos(t') + m*sin(t'))\n        where t' equals to mod(t, 2PI/X);\n        */\n\n      case \"diamond\":\n        // http://www.wolframalpha.com/input/?i=plot+r+%3D+1%2F%28cos%28mod+\n        // %28t%2C+PI%2F2%29%29%2Bsin%28mod+%28t%2C+PI%2F2%29%29%29%2C+t+%3D\n        // +0+..+2*PI\n        settings.shape = function shapeSquare(theta) {\n          var thetaPrime = theta % ((2 * Math.PI) / 4);\n          return 1 / (Math.cos(thetaPrime) + Math.sin(thetaPrime));\n        };\n        break;\n\n      case \"square\":\n        // http://www.wolframalpha.com/input/?i=plot+r+%3D+min(1%2Fabs(cos(t\n        // )),1%2Fabs(sin(t)))),+t+%3D+0+..+2*PI\n        settings.shape = function shapeSquare(theta) {\n          return Math.min(\n            1 / Math.abs(Math.cos(theta)),\n            1 / Math.abs(Math.sin(theta))\n          );\n        };\n        break;\n\n      case \"triangle-forward\":\n        // http://www.wolframalpha.com/input/?i=plot+r+%3D+1%2F%28cos%28mod+\n        // %28t%2C+2*PI%2F3%29%29%2Bsqrt%283%29sin%28mod+%28t%2C+2*PI%2F3%29\n        // %29%29%2C+t+%3D+0+..+2*PI\n        settings.shape = function shapeTriangle(theta) {\n          var thetaPrime = theta % ((2 * Math.PI) / 3);\n          return (\n            1 / (Math.cos(thetaPrime) + Math.sqrt(3) * Math.sin(thetaPrime))\n          );\n        };\n        break;\n\n      case \"triangle\":\n      case \"triangle-upright\":\n        settings.shape = function shapeTriangle(theta) {\n          var thetaPrime = (theta + (Math.PI * 3) / 2) % ((2 * Math.PI) / 3);\n          return (\n            1 / (Math.cos(thetaPrime) + Math.sqrt(3) * Math.sin(thetaPrime))\n          );\n        };\n        break;\n\n      case \"pentagon\":\n        settings.shape = function shapePentagon(theta) {\n          var thetaPrime = (theta + 0.955) % ((2 * Math.PI) / 5);\n          return 1 / (Math.cos(thetaPrime) + 0.726543 * Math.sin(thetaPrime));\n        };\n        break;\n\n      case \"star\":\n        settings.shape = function shapeStar(theta) {\n          var thetaPrime = (theta + 0.955) % ((2 * Math.PI) / 10);\n          if (\n            ((theta + 0.955) % ((2 * Math.PI) / 5)) - (2 * Math.PI) / 10 >=\n            0\n          ) {\n            return (\n              1 /\n              (Math.cos((2 * Math.PI) / 10 - thetaPrime) +\n                3.07768 * Math.sin((2 * Math.PI) / 10 - thetaPrime))\n            );\n          } else {\n            return 1 / (Math.cos(thetaPrime) + 3.07768 * Math.sin(thetaPrime));\n          }\n        };\n        break;\n    }\n  }\n\n  /* Make sure gridSize is a whole number and is not smaller than 4px */\n  settings.gridSize = Math.max(Math.floor(settings.gridSize), 4);\n\n  /* shorthand */\n  var g = settings.gridSize;\n  var maskRectWidth = g - settings.maskGapWidth;\n\n  /* normalize rotation settings */\n  var rotationRange = Math.abs(settings.maxRotation - settings.minRotation);\n  var rotationSteps = Math.abs(Math.floor(settings.rotationSteps));\n  var minRotation = Math.min(settings.maxRotation, settings.minRotation);\n\n  /* information/object available to all functions, set when start() */\n  var grid, // 2d array containing filling information\n    ngx,\n    ngy, // width and height of the grid\n    center, // position of the center of the cloud\n    maxRadius;\n\n  /* timestamp for measuring each putWord() action */\n  var escapeTime;\n\n  /* function for getting the color of the text */\n  var getTextColor;\n  function random_hsl_color(min, max) {\n    return (\n      \"hsl(\" +\n      (Math.random() * 360).toFixed() +\n      \",\" +\n      (Math.random() * 30 + 70).toFixed() +\n      \"%,\" +\n      (Math.random() * (max - min) + min).toFixed() +\n      \"%)\"\n    );\n  }\n  switch (settings.color) {\n    case \"random-dark\":\n      getTextColor = function getRandomDarkColor() {\n        return random_hsl_color(10, 50);\n      };\n      break;\n\n    case \"random-light\":\n      getTextColor = function getRandomLightColor() {\n        return random_hsl_color(50, 90);\n      };\n      break;\n\n    default:\n      if (typeof settings.color === \"function\") {\n        getTextColor = settings.color;\n      }\n      break;\n  }\n\n  /* function for getting the font-weight of the text */\n  var getTextFontWeight;\n  if (typeof settings.fontWeight === \"function\") {\n    getTextFontWeight = settings.fontWeight;\n  }\n\n  /* function for getting the classes of the text */\n  var getTextClasses = null;\n  if (typeof settings.classes === \"function\") {\n    getTextClasses = settings.classes;\n  }\n\n  /* Interactive */\n  var interactive = false;\n  var infoGrid = [];\n  var hovered;\n\n  var getInfoGridFromMouseTouchEvent = function getInfoGridFromMouseTouchEvent(\n    evt\n  ) {\n    var canvas = evt.currentTarget;\n    var rect = canvas.getBoundingClientRect();\n    var clientX;\n    var clientY;\n    /** Detect if touches are available */\n    if (evt.touches) {\n      clientX = evt.touches[0].clientX;\n      clientY = evt.touches[0].clientY;\n    } else {\n      clientX = evt.clientX;\n      clientY = evt.clientY;\n    }\n    var eventX = clientX - rect.left;\n    var eventY = clientY - rect.top;\n\n    var x = Math.floor((eventX * (canvas.width / rect.width || 1)) / g);\n    var y = Math.floor((eventY * (canvas.height / rect.height || 1)) / g);\n\n    return infoGrid[x][y];\n  };\n\n  var wordcloudhover = function wordcloudhover(evt) {\n    var info = getInfoGridFromMouseTouchEvent(evt);\n\n    if (hovered === info) {\n      return;\n    }\n\n    hovered = info;\n    if (!info) {\n      settings.hover(undefined, undefined, evt);\n\n      return;\n    }\n\n    settings.hover(info.item, info.dimension, evt);\n  };\n\n  var wordcloudclick = function wordcloudclick(evt) {\n    var info = getInfoGridFromMouseTouchEvent(evt);\n    if (!info) {\n      return;\n    }\n\n    settings.click(info.item, info.dimension, evt);\n    evt.preventDefault();\n  };\n\n  /* Get points on the grid for a given radius away from the center */\n  var pointsAtRadius = [];\n  var getPointsAtRadius = function getPointsAtRadius(radius) {\n    if (pointsAtRadius[radius]) {\n      return pointsAtRadius[radius];\n    }\n\n    // Look for these number of points on each radius\n    var T = radius * 8;\n\n    // Getting all the points at this radius\n    var t = T;\n    var points = [];\n\n    if (radius === 0) {\n      points.push([center[0], center[1], 0]);\n    }\n\n    while (t--) {\n      // distort the radius to put the cloud in shape\n      var rx = 1;\n      if (settings.shape !== \"circle\") {\n        rx = settings.shape((t / T) * 2 * Math.PI); // 0 to 1\n      }\n\n      // Push [x, y, t]; t is used solely for getTextColor()\n      points.push([\n        center[0] + radius * rx * Math.cos((-t / T) * 2 * Math.PI),\n        center[1] +\n          radius * rx * Math.sin((-t / T) * 2 * Math.PI) * settings.ellipticity,\n        (t / T) * 2 * Math.PI,\n      ]);\n    }\n\n    pointsAtRadius[radius] = points;\n    return points;\n  };\n\n  /* Return true if we had spent too much time */\n  var exceedTime = function exceedTime() {\n    return (\n      settings.abortThreshold > 0 &&\n      new Date().getTime() - escapeTime > settings.abortThreshold\n    );\n  };\n\n  /* Get the deg of rotation according to settings, and luck. */\n  var getRotateDeg = function getRotateDeg() {\n    if (settings.rotateRatio === 0) {\n      return 0;\n    }\n\n    if (Math.random() > settings.rotateRatio) {\n      return 0;\n    }\n\n    if (rotationRange === 0) {\n      return minRotation;\n    }\n\n    if (rotationSteps > 0) {\n      // Min rotation + zero or more steps * span of one step\n      return (\n        minRotation +\n        (Math.floor(Math.random() * rotationSteps) * rotationRange) /\n          (rotationSteps - 1)\n      );\n    } else {\n      return minRotation + Math.random() * rotationRange;\n    }\n  };\n\n  var getTextInfo = function getTextInfo(word, weight, rotateDeg) {\n    // calculate the acutal font size\n    // fontSize === 0 means weightFactor function wants the text skipped,\n    // and size < minSize means we cannot draw the text.\n    var debug = false;\n    var fontSize = settings.weightFactor(weight);\n    if (fontSize <= settings.minSize) {\n      return false;\n    }\n\n    // Scale factor here is to make sure fillText is not limited by\n    // the minium font size set by browser.\n    // It will always be 1 or 2n.\n    var mu = 1;\n    if (fontSize < minFontSize) {\n      mu = (function calculateScaleFactor() {\n        var mu = 2;\n        while (mu * fontSize < minFontSize) {\n          mu += 2;\n        }\n        return mu;\n      })();\n    }\n\n    // Get fontWeight that will be used to set fctx.font\n    var fontWeight;\n    if (getTextFontWeight) {\n      fontWeight = getTextFontWeight(word, weight, fontSize);\n    } else {\n      fontWeight = settings.fontWeight;\n    }\n\n    var fcanvas = document.createElement(\"canvas\");\n    var fctx = fcanvas.getContext(\"2d\", { willReadFrequently: true });\n\n    fctx.font =\n      fontWeight +\n      \" \" +\n      (fontSize * mu).toString(10) +\n      \"px \" +\n      settings.fontFamily;\n\n    // Estimate the dimension of the text with measureText().\n    var fw = fctx.measureText(word).width / mu;\n    var fh =\n      Math.max(\n        fontSize * mu,\n        fctx.measureText(\"m\").width,\n        fctx.measureText(\"\\uFF37\").width\n      ) / mu;\n\n    // Create a boundary box that is larger than our estimates,\n    // so text don't get cut of (it sill might)\n    var boxWidth = fw + fh * 2;\n    var boxHeight = fh * 3;\n    var fgw = Math.ceil(boxWidth / g);\n    var fgh = Math.ceil(boxHeight / g);\n    boxWidth = fgw * g;\n    boxHeight = fgh * g;\n\n    // Calculate the proper offsets to make the text centered at\n    // the preferred position.\n\n    // This is simply half of the width.\n    var fillTextOffsetX = -fw / 2;\n    // Instead of moving the box to the exact middle of the preferred\n    // position, for Y-offset we move 0.4 instead, so Latin alphabets look\n    // vertical centered.\n    var fillTextOffsetY = -fh * 0.4;\n\n    // Calculate the actual dimension of the canvas, considering the rotation.\n    var cgh = Math.ceil(\n      (boxWidth * Math.abs(Math.sin(rotateDeg)) +\n        boxHeight * Math.abs(Math.cos(rotateDeg))) /\n        g\n    );\n    var cgw = Math.ceil(\n      (boxWidth * Math.abs(Math.cos(rotateDeg)) +\n        boxHeight * Math.abs(Math.sin(rotateDeg))) /\n        g\n    );\n    var width = cgw * g;\n    var height = cgh * g;\n\n    fcanvas.setAttribute(\"width\", width);\n    fcanvas.setAttribute(\"height\", height);\n\n    if (debug) {\n      // Attach fcanvas to the DOM\n      document.body.appendChild(fcanvas);\n      // Save it's state so that we could restore and draw the grid correctly.\n      fctx.save();\n    }\n\n    // Scale the canvas with |mu|.\n    fctx.scale(1 / mu, 1 / mu);\n    fctx.translate((width * mu) / 2, (height * mu) / 2);\n    fctx.rotate(-rotateDeg);\n\n    // Once the width/height is set, ctx info will be reset.\n    // Set it again here.\n    fctx.font =\n      fontWeight +\n      \" \" +\n      (fontSize * mu).toString(10) +\n      \"px \" +\n      settings.fontFamily;\n\n    // Fill the text into the fcanvas.\n    // XXX: We cannot because textBaseline = 'top' here because\n    // Firefox and Chrome uses different default line-height for canvas.\n    // Please read https://bugzil.la/737852#c6.\n    // Here, we use textBaseline = 'middle' and draw the text at exactly\n    // 0.5 * fontSize lower.\n    fctx.fillStyle = \"#000\";\n    fctx.textBaseline = \"middle\";\n    fctx.fillText(\n      word,\n      fillTextOffsetX * mu,\n      (fillTextOffsetY + fontSize * 0.5) * mu\n    );\n\n    // Get the pixels of the text\n    var imageData = fctx.getImageData(0, 0, width, height).data;\n\n    if (exceedTime()) {\n      return false;\n    }\n\n    if (debug) {\n      // Draw the box of the original estimation\n      fctx.strokeRect(fillTextOffsetX * mu, fillTextOffsetY, fw * mu, fh * mu);\n      fctx.restore();\n    }\n\n    // Read the pixels and save the information to the occupied array\n    var occupied = [];\n    var gx = cgw,\n      gy,\n      x,\n      y;\n    var bounds = [cgh / 2, cgw / 2, cgh / 2, cgw / 2];\n    while (gx--) {\n      gy = cgh;\n      while (gy--) {\n        y = g;\n        singleGridLoop: {\n          while (y--) {\n            x = g;\n            while (x--) {\n              if (imageData[((gy * g + y) * width + (gx * g + x)) * 4 + 3]) {\n                occupied.push([gx, gy]);\n\n                if (gx < bounds[3]) {\n                  bounds[3] = gx;\n                }\n                if (gx > bounds[1]) {\n                  bounds[1] = gx;\n                }\n                if (gy < bounds[0]) {\n                  bounds[0] = gy;\n                }\n                if (gy > bounds[2]) {\n                  bounds[2] = gy;\n                }\n\n                if (debug) {\n                  fctx.fillStyle = \"rgba(255, 0, 0, 0.5)\";\n                  fctx.fillRect(gx * g, gy * g, g - 0.5, g - 0.5);\n                }\n                break singleGridLoop;\n              }\n            }\n          }\n          if (debug) {\n            fctx.fillStyle = \"rgba(0, 0, 255, 0.5)\";\n            fctx.fillRect(gx * g, gy * g, g - 0.5, g - 0.5);\n          }\n        }\n      }\n    }\n\n    if (debug) {\n      fctx.fillStyle = \"rgba(0, 255, 0, 0.5)\";\n      fctx.fillRect(\n        bounds[3] * g,\n        bounds[0] * g,\n        (bounds[1] - bounds[3] + 1) * g,\n        (bounds[2] - bounds[0] + 1) * g\n      );\n    }\n\n    // Return information needed to create the text on the real canvas\n    return {\n      mu: mu,\n      occupied: occupied,\n      bounds: bounds,\n      gw: cgw,\n      gh: cgh,\n      fillTextOffsetX: fillTextOffsetX,\n      fillTextOffsetY: fillTextOffsetY,\n      fillTextWidth: fw,\n      fillTextHeight: fh,\n      fontSize: fontSize,\n    };\n  };\n\n  /* Determine if there is room available in the given dimension */\n  var canFitText = function canFitText(gx, gy, gw, gh, occupied) {\n    // Go through the occupied points,\n    // return false if the space is not available.\n    var i = occupied.length;\n    while (i--) {\n      var px = gx + occupied[i][0];\n      var py = gy + occupied[i][1];\n\n      if (px >= ngx || py >= ngy || px < 0 || py < 0) {\n        if (!settings.drawOutOfBound) {\n          return false;\n        }\n        continue;\n      }\n\n      if (!grid[px][py]) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  /* Actually draw the text on the grid */\n  var drawText = function drawText(\n    gx,\n    gy,\n    info,\n    word,\n    weight,\n    distance,\n    theta,\n    rotateDeg,\n    attributes\n  ) {\n    var fontSize = info.fontSize;\n    var color;\n    if (getTextColor) {\n      color = getTextColor(word, weight, fontSize, distance, theta);\n    } else {\n      color = settings.color;\n    }\n\n    // get fontWeight that will be used to set ctx.font and font style rule\n    var fontWeight;\n    if (getTextFontWeight) {\n      fontWeight = getTextFontWeight(word, weight, fontSize);\n    } else {\n      fontWeight = settings.fontWeight;\n    }\n\n    var classes;\n    if (getTextClasses) {\n      classes = getTextClasses(word, weight, fontSize);\n    } else {\n      classes = settings.classes;\n    }\n\n    var dimension;\n    var bounds = info.bounds;\n    dimension = {\n      x: (gx + bounds[3]) * g,\n      y: (gy + bounds[0]) * g,\n      w: (bounds[1] - bounds[3] + 1) * g,\n      h: (bounds[2] - bounds[0] + 1) * g,\n    };\n\n    elements.forEach(function (el) {\n      if (el.getContext) {\n        var ctx = el.getContext(\"2d\");\n        var mu = info.mu;\n\n        // Save the current state before messing it\n        ctx.save();\n        ctx.scale(1 / mu, 1 / mu);\n\n        ctx.font =\n          fontWeight +\n          \" \" +\n          (fontSize * mu).toString(10) +\n          \"px \" +\n          settings.fontFamily;\n        ctx.fillStyle = color;\n\n        // Translate the canvas position to the origin coordinate of where\n        // the text should be put.\n        ctx.translate((gx + info.gw / 2) * g * mu, (gy + info.gh / 2) * g * mu);\n\n        if (rotateDeg !== 0) {\n          ctx.rotate(-rotateDeg);\n        }\n\n        // Finally, fill the text.\n\n        // XXX: We cannot because textBaseline = 'top' here because\n        // Firefox and Chrome uses different default line-height for canvas.\n        // Please read https://bugzil.la/737852#c6.\n        // Here, we use textBaseline = 'middle' and draw the text at exactly\n        // 0.5 * fontSize lower.\n        ctx.textBaseline = \"middle\";\n        ctx.fillText(\n          word,\n          info.fillTextOffsetX * mu,\n          (info.fillTextOffsetY + fontSize * 0.5) * mu\n        );\n\n        // The below box is always matches how <span>s are positioned\n        /* ctx.strokeRect(info.fillTextOffsetX, info.fillTextOffsetY,\n            info.fillTextWidth, info.fillTextHeight); */\n\n        // Restore the state.\n        ctx.restore();\n      } else {\n        // drawText on DIV element\n        var span = document.createElement(\"span\");\n        var transformRule = \"\";\n        transformRule = \"rotate(\" + (-rotateDeg / Math.PI) * 180 + \"deg) \";\n        if (info.mu !== 1) {\n          transformRule +=\n            \"translateX(-\" +\n            info.fillTextWidth / 4 +\n            \"px) \" +\n            \"scale(\" +\n            1 / info.mu +\n            \")\";\n        }\n        var styleRules = {\n          position: \"absolute\",\n          display: \"block\",\n          font:\n            fontWeight + \" \" + fontSize * info.mu + \"px \" + settings.fontFamily,\n          left: (gx + info.gw / 2) * g + info.fillTextOffsetX + \"px\",\n          top: (gy + info.gh / 2) * g + info.fillTextOffsetY + \"px\",\n          width: info.fillTextWidth + \"px\",\n          height: info.fillTextHeight + \"px\",\n          lineHeight: fontSize + \"px\",\n          whiteSpace: \"nowrap\",\n          transform: transformRule,\n          webkitTransform: transformRule,\n          msTransform: transformRule,\n          transformOrigin: \"50% 40%\",\n          webkitTransformOrigin: \"50% 40%\",\n          msTransformOrigin: \"50% 40%\",\n        };\n        if (color) {\n          styleRules.color = color;\n        }\n        span.textContent = word;\n        for (var cssProp in styleRules) {\n          span.style[cssProp] = styleRules[cssProp];\n        }\n        if (attributes) {\n          for (var attribute in attributes) {\n            span.setAttribute(attribute, attributes[attribute]);\n          }\n        }\n        if (classes) {\n          span.className += classes;\n        }\n        el.appendChild(span);\n      }\n    });\n  };\n\n  /* Help function to updateGrid */\n  var fillGridAt = function fillGridAt(x, y, drawMask, dimension, item) {\n    if (x >= ngx || y >= ngy || x < 0 || y < 0) {\n      return;\n    }\n\n    grid[x][y] = false;\n\n    if (drawMask) {\n      var ctx = elements[0].getContext(\"2d\");\n      ctx.fillRect(x * g, y * g, maskRectWidth, maskRectWidth);\n    }\n\n    if (interactive) {\n      infoGrid[x][y] = { item: item, dimension: dimension };\n    }\n  };\n\n  /* Update the filling information of the given space with occupied points.\n    Draw the mask on the canvas if necessary. */\n  var updateGrid = function updateGrid(gx, gy, gw, gh, info, item) {\n    var occupied = info.occupied;\n    var drawMask = settings.drawMask;\n    var ctx;\n    if (drawMask) {\n      ctx = elements[0].getContext(\"2d\");\n      ctx.save();\n      ctx.fillStyle = settings.maskColor;\n    }\n\n    var dimension;\n    if (interactive) {\n      var bounds = info.bounds;\n      dimension = {\n        x: (gx + bounds[3]) * g,\n        y: (gy + bounds[0]) * g,\n        w: (bounds[1] - bounds[3] + 1) * g,\n        h: (bounds[2] - bounds[0] + 1) * g,\n      };\n    }\n\n    var i = occupied.length;\n    while (i--) {\n      var px = gx + occupied[i][0];\n      var py = gy + occupied[i][1];\n\n      if (px >= ngx || py >= ngy || px < 0 || py < 0) {\n        continue;\n      }\n\n      fillGridAt(px, py, drawMask, dimension, item);\n    }\n\n    if (drawMask) {\n      ctx.restore();\n    }\n  };\n\n  /* putWord() processes each item on the list,\n    calculate it's size and determine it's position, and actually\n    put it on the canvas. */\n  var putWord = function putWord(item) {\n    var word, weight, attributes;\n    if (Array.isArray(item)) {\n      word = item[0];\n      weight = item[1];\n    } else {\n      word = item.word;\n      weight = item.weight;\n      attributes = item.attributes;\n    }\n    var rotateDeg = getRotateDeg();\n\n    // get info needed to put the text onto the canvas\n    var info = getTextInfo(word, weight, rotateDeg);\n\n    // not getting the info means we shouldn't be drawing this one.\n    if (!info) {\n      return false;\n    }\n\n    if (exceedTime()) {\n      return false;\n    }\n\n    // If drawOutOfBound is set to false,\n    // skip the loop if we have already know the bounding box of\n    // word is larger than the canvas.\n    if (!settings.drawOutOfBound) {\n      var bounds = info.bounds;\n      if (bounds[1] - bounds[3] + 1 > ngx || bounds[2] - bounds[0] + 1 > ngy) {\n        return false;\n      }\n    }\n\n    // Determine the position to put the text by\n    // start looking for the nearest points\n    var r = maxRadius + 1;\n\n    var tryToPutWordAtPoint = function (gxy) {\n      var gx = Math.floor(gxy[0] - info.gw / 2);\n      var gy = Math.floor(gxy[1] - info.gh / 2);\n      var gw = info.gw;\n      var gh = info.gh;\n\n      // If we cannot fit the text at this position, return false\n      // and go to the next position.\n      if (!canFitText(gx, gy, gw, gh, info.occupied)) {\n        return false;\n      }\n\n      // Actually put the text on the canvas\n      drawText(\n        gx,\n        gy,\n        info,\n        word,\n        weight,\n        maxRadius - r,\n        gxy[2],\n        rotateDeg,\n        attributes\n      );\n\n      // Mark the spaces on the grid as filled\n      updateGrid(gx, gy, gw, gh, info, item);\n\n      // Return true so some() will stop and also return true.\n      return true;\n    };\n\n    while (r--) {\n      var points = getPointsAtRadius(maxRadius - r);\n\n      if (settings.shuffle) {\n        points = [].concat(points);\n        shuffleArray(points);\n      }\n\n      // Try to fit the words by looking at each point.\n      // array.some() will stop and return true\n      // when putWordAtPoint() returns true.\n      // If all the points returns false, array.some() returns false.\n      var drawn = points.some(tryToPutWordAtPoint);\n\n      if (drawn) {\n        // leave putWord() and return true\n        return true;\n      }\n    }\n    if (settings.shrinkToFit) {\n      if (Array.isArray(item)) {\n        item[1] = (item[1] * 3) / 4;\n      } else {\n        item.weight = (item.weight * 3) / 4;\n      }\n      return putWord(item);\n    }\n    // we tried all distances but text won't fit, return false\n    return false;\n  };\n\n  /* Send DOM event to all elements. Will stop sending event and return\n    if the previous one is canceled (for cancelable events). */\n  var sendEvent = function sendEvent(type, cancelable, details) {\n    if (cancelable) {\n      return !elements.some(function (el) {\n        var event = new CustomEvent(type, {\n          detail: details || {},\n        });\n        return !el.dispatchEvent(event);\n      }, this);\n    } else {\n      elements.forEach(function (el) {\n        var event = new CustomEvent(type, {\n          detail: details || {},\n        });\n        el.dispatchEvent(event);\n      }, this);\n    }\n  };\n\n  /* Start drawing on a canvas */\n  var startDrawing = function startDrawing() {\n    // For dimensions, clearCanvas etc.,\n    // we only care about the first element.\n    var canvas = elements[0];\n\n    if (canvas.getContext) {\n      ngx = Math.ceil(canvas.width / g);\n      ngy = Math.ceil(canvas.height / g);\n    } else {\n      var rect = canvas.getBoundingClientRect();\n      ngx = Math.ceil(rect.width / g);\n      ngy = Math.ceil(rect.height / g);\n    }\n\n    // Sending a wordcloudstart event which cause the previous loop to stop.\n    // Do nothing if the event is canceled.\n    if (!sendEvent(\"wordcloudstart\", true)) {\n      return;\n    }\n\n    // Determine the center of the word cloud\n    center = settings.origin\n      ? [settings.origin[0] / g, settings.origin[1] / g]\n      : [ngx / 2, ngy / 2];\n\n    // Maxium radius to look for space\n    maxRadius = Math.floor(Math.sqrt(ngx * ngx + ngy * ngy));\n\n    /* Clear the canvas only if the clearCanvas is set,\n        if not, update the grid to the current canvas state */\n    grid = [];\n\n    var gx, gy, i;\n    if (!canvas.getContext || settings.clearCanvas) {\n      elements.forEach(function (el) {\n        if (el.getContext) {\n          var ctx = el.getContext(\"2d\");\n          ctx.fillStyle = settings.backgroundColor;\n          ctx.clearRect(0, 0, ngx * (g + 1), ngy * (g + 1));\n          ctx.fillRect(0, 0, ngx * (g + 1), ngy * (g + 1));\n        } else {\n          el.textContent = \"\";\n          el.style.backgroundColor = settings.backgroundColor;\n          el.style.position = \"relative\";\n        }\n      });\n\n      /* fill the grid with empty state */\n      gx = ngx;\n      while (gx--) {\n        grid[gx] = [];\n        gy = ngy;\n        while (gy--) {\n          grid[gx][gy] = true;\n        }\n      }\n    } else {\n      /* Determine bgPixel by creating\n        another canvas and fill the specified background color. */\n      var bctx = document.createElement(\"canvas\").getContext(\"2d\");\n\n      bctx.fillStyle = settings.backgroundColor;\n      bctx.fillRect(0, 0, 1, 1);\n      var bgPixel = bctx.getImageData(0, 0, 1, 1).data;\n\n      /* Read back the pixels of the canvas we got to tell which part of the\n        canvas is empty.\n        (no clearCanvas only works with a canvas, not divs) */\n      var imageData = canvas\n        .getContext(\"2d\")\n        .getImageData(0, 0, ngx * g, ngy * g).data;\n\n      gx = ngx;\n      var x, y;\n      while (gx--) {\n        grid[gx] = [];\n        gy = ngy;\n        while (gy--) {\n          y = g;\n          singleGridLoop: while (y--) {\n            x = g;\n            while (x--) {\n              i = 4;\n              while (i--) {\n                if (\n                  imageData[((gy * g + y) * ngx * g + (gx * g + x)) * 4 + i] !==\n                  bgPixel[i]\n                ) {\n                  grid[gx][gy] = false;\n                  break singleGridLoop;\n                }\n              }\n            }\n          }\n          if (grid[gx][gy] !== false) {\n            grid[gx][gy] = true;\n          }\n        }\n      }\n\n      imageData = bctx = bgPixel = undefined;\n    }\n\n    // fill the infoGrid with empty state if we need it\n    if (settings.hover || settings.click) {\n      interactive = true;\n\n      /* fill the grid with empty state */\n      gx = ngx + 1;\n      while (gx--) {\n        infoGrid[gx] = [];\n      }\n\n      if (settings.hover) {\n        canvas.addEventListener(\"mousemove\", wordcloudhover);\n      }\n\n      if (settings.click) {\n        canvas.addEventListener(\"click\", wordcloudclick);\n        canvas.style.webkitTapHighlightColor = \"rgba(0, 0, 0, 0)\";\n      }\n\n      canvas.addEventListener(\"wordcloudstart\", function stopInteraction() {\n        canvas.removeEventListener(\"wordcloudstart\", stopInteraction);\n\n        canvas.removeEventListener(\"mousemove\", wordcloudhover);\n        canvas.removeEventListener(\"click\", wordcloudclick);\n        hovered = undefined;\n      });\n    }\n\n    i = 0;\n    var loopingFunction, stoppingFunction;\n    if (settings.wait !== 0) {\n      loopingFunction = window.setTimeout;\n      stoppingFunction = window.clearTimeout;\n    } else {\n      loopingFunction = window.setImmediate;\n      stoppingFunction = window.clearImmediate;\n    }\n\n    var addEventListener = function addEventListener(type, listener) {\n      elements.forEach(function (el) {\n        el.addEventListener(type, listener);\n      }, this);\n    };\n\n    var removeEventListener = function removeEventListener(type, listener) {\n      elements.forEach(function (el) {\n        el.removeEventListener(type, listener);\n      }, this);\n    };\n\n    var anotherWordCloudStart = function anotherWordCloudStart() {\n      removeEventListener(\"wordcloudstart\", anotherWordCloudStart);\n      stoppingFunction(timer);\n    };\n\n    addEventListener(\"wordcloudstart\", anotherWordCloudStart);\n\n    var timer = loopingFunction(function loop() {\n      if (i >= settings.list.length) {\n        stoppingFunction(timer);\n        sendEvent(\"wordcloudstop\", false);\n        removeEventListener(\"wordcloudstart\", anotherWordCloudStart);\n\n        return;\n      }\n      escapeTime = new Date().getTime();\n      var drawn = putWord(settings.list[i]);\n      var canceled = !sendEvent(\"wordclouddrawn\", true, {\n        item: settings.list[i],\n        drawn: drawn,\n      });\n      if (exceedTime() || canceled) {\n        stoppingFunction(timer);\n        settings.abort();\n        sendEvent(\"wordcloudabort\", false);\n        sendEvent(\"wordcloudstop\", false);\n        removeEventListener(\"wordcloudstart\", anotherWordCloudStart);\n        return;\n      }\n      i++;\n      timer = loopingFunction(loop, settings.wait);\n    }, settings.wait);\n  };\n\n  // All set, start the drawing\n  startDrawing();\n};\n\nexport default WordCloud;\n","import WordCloud from \"./wordcloud2\";\nimport React from \"react\";\n\nclass Cloud extends React.Component {\n  componentDidMount() {\n    this.updateCanvas();\n  }\n  updateCanvas() {\n    const freqs = [\n      [\"foo\", 20],\n      [\"bar\", 15],\n    ];\n\n    const options = {\n      list: freqs,\n      color: \"#000\",\n      fontFamily: \"sans-serif\",\n    };\n\n    WordCloud(this.refs.canvas, options);\n  }\n  render() {\n    return <canvas ref=\"canvas\" width={300} height={300} />;\n  }\n}\n\nexport default Cloud;\n","import React from \"react\";\nimport Cloud from \"./WordCloud.js\";\n\nconst USModalCard = (props) => {\n  let date = new Date(props.date);\n  date.setDate(date.getDate() + 1);\n  if (props.error === \"Document not found\") {\n    return (\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <p className=\"modal-card-title\">\n            <span className=\"has-text-weight-bold\">{props.state}</span>\n          </p>\n        </header>\n        <section className=\"modal-card-body\">\n          <p>\n            <span className=\"has-text-weight-bold\">Error:</span> Data not found\n            for {date.toDateString().slice(4)}.\n          </p>\n        </section>\n        <section className=\"modal-card-foot\">\n          <p className=\"button is-warning\" onClick={props.handle}>\n            Close\n          </p>\n        </section>\n      </div>\n    );\n  }\n  if (props.new_cases !== undefined) {\n    return (\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <p className=\"modal-card-title\">\n            <span className=\"has-text-weight-bold\">{props.location} </span> |{\" \"}\n            {date.toDateString().slice(4)}\n          </p>\n        </header>\n        <section className=\"modal-card-body\">\n          <h3 className=\"has-text-weight-semibold is-size-4 mt-0 mb-2\">\n            COVID Factsheet\n          </h3>\n          <div className=\"columns\">\n            <div className=\"column is-4\">\n              <ul>\n                <li>\n                  <span class=\"icon\">\n                    <i class=\"fas fa-vials\"></i>\n                  </span>\n                  <strong> New Tests:</strong>{\" \"}\n                  {props.new_cases.toLocaleString(\"en\")}\n                </li>\n                <li>\n                  <span class=\"icon\">\n                    <i class=\"fas fa-hospital\"></i>\n                  </span>\n                  <strong> New Cases:</strong>{\" \"}\n                  {props.new_cases.toLocaleString(\"en\")}\n                </li>\n                <li>\n                  <span class=\"icon\">\n                    <i class=\"fas fa-hospital-alt\"></i>\n                  </span>\n                  <strong> Total Cases:</strong>{\" \"}\n                  {props.total_cases.toLocaleString(\"en\")}\n                </li>\n              </ul>\n            </div>\n            <div className=\"column\">\n              <ul>\n                <li>\n                  <span class=\"icon\">\n                    <i class=\"fas fa-hospital-user\"></i>\n                  </span>\n                  <strong>New Hospitalized:</strong>{\" \"}\n                  {props.new_hospitalized.toLocaleString(\"en\")}\n                </li>\n                <li>\n                  <span class=\"icon\">\n                    <i class=\"fas fa-book-dead\"></i>\n                  </span>\n                  <strong> New Deaths:</strong>{\" \"}\n                  {props.new_deaths.toLocaleString(\"en\")}\n                </li>\n              </ul>\n            </div>\n          </div>\n          <h3 className=\"has-text-weight-semibold is-size-4 mt-0 mb-2\">\n            Viral Trends:\n          </h3>\n        <Cloud />\n        </section>\n        <section className=\"modal-card-foot\">\n          <p className=\"button is-warning\" onClick={props.handle}>\n            Close\n          </p>\n        </section>\n      </div>\n    );\n  } else {\n    return \"\";\n  }\n};\n\n// location: \"Michigan\"\n// new_cases: 0\n// new_deaths: 0\n// new_hospitalized: 0\n// new_negatives: 0\n// new_tests: 0\n// state_code: \"MI\"\n// total_cases: 9\n// total_tests: 9\n// _id: \"5f184f23f60307de2d8521d8\"\n\nexport default USModalCard;\n","import React, { Component } from \"react\";\nimport { geoCentroid } from \"d3-geo\";\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker,\n  Annotation,\n  ZoomableGroup,\n} from \"react-simple-maps\";\nimport { Container } from \"react-bulma-components\";\nimport Slider from \"./Slider\";\nimport { scaleLinear } from \"d3-scale\";\n\nimport allStates from \"../data/allStates.json\";\nimport LinearGradient from \"./LinearGradient.js\";\nimport USModalCard from \"./USModalCard\";\n\n// const geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\";\n\nconst geoData = require(\"../data/stateData.json\");\n\nlet ids = geoData[\"objects\"][\"states\"][\"geometries\"].map(\n  (state) => state[\"id\"]\n);\n\n// get a list of all the states by 2 letter code\nconst states = ids.map((id) => allStates.find((doc) => id === doc.val)[\"id\"]);\n\nconst offsets = {\n  VT: [50, -8],\n  NH: [34, 2],\n  MA: [30, -1],\n  RI: [28, 2],\n  CT: [35, 10],\n  NJ: [34, 1],\n  DE: [33, 0],\n  MD: [47, 10],\n  DC: [49, 21],\n};\n\nconst epoch = new Date(2020, 2, 15); // Start visualization from March 1st\n\n// number of days between march 1st and present\nconst end = new Date(2020, 6, 20)\nconst NUM_DAYS = (end.getTime() - epoch.getTime()) / (1000 * 3600 * 24);\n\n// help us make color scheme\nconst MAX_DEATHS = 15;\n\nconst MAX_CASES = 500;\n\nconst colorScaleDeaths = scaleLinear()\n  .domain([0, MAX_DEATHS])\n  .range([\"#e5e5e5\", \"#ff5233\"]);\n\nconst colorScaleCases = scaleLinear()\n  .domain([0, MAX_CASES])\n  .range([\"#e5e5e5\", \"#ffa500\"]);\n\n// Gradient Parameters\nconst gradientDataDeaths = {\n  title: \"Deaths per Million\",\n  fromColor: \"#e5e5e5\",\n  toColor: \"#ff5233\",\n  min: 0,\n  max: `${MAX_DEATHS}+`,\n};\n\nconst gradientDataCases = {\n  title: \"Cases per Million\",\n  fromColor: \"#e5e5e5\",\n  toColor: \"#FFA500\",\n  min: 0,\n  max: `${MAX_CASES}+`,\n};\n\n\n\nclass USMap extends Component {\n  constructor(props) {\n    super(props);\n    // initial fill is all gray\n    const gray = Array(177).fill(\"#e5e5e5\");\n\n    this.state = {\n      date: epoch,\n      fills: gray,\n      data: undefined,\n      state: undefined,\n      modal: false,\n      stat: \"cases\"\n    };\n\n    this.fetchFills = this.fetchFills.bind(this);\n    this.toggleModal = this.toggleModal.bind(this);\n    this.generateData = this.generateData.bind(this);\n    this.query_by_date = this.query_by_date.bind(this);\n    this.toggleStat = this.toggleStat.bind(this);\n    this.fetchFills(epoch);\n  }\n\n  query_by_date = (date) => {\n    let querystring = undefined;\n    if (this.state.stat === \"deaths\") {\n      querystring = (\n        \"/us-dpm-by-date?date=\" +\n        date.getDate() +\n        \"_\" +\n        (date.getMonth() + 1) +\n        \"_\" +\n        (date.getYear() + 1900)\n      );\n    } else {\n      querystring = (\n        \"/us-cpm-by-date?date=\" +\n        date.getDate() +\n        \"_\" +\n        (date.getMonth() + 1) +\n        \"_\" +\n        (date.getYear() + 1900)\n      );\n    }\n    return querystring;\n  };\n\n  updateVal = async (val) => {\n    let newDate = new Date(2020, 2, parseInt(val) + 15);\n    this.setState({ date: newDate });\n    await this.fetchFills(this.state.date);\n  };\n\n  async fetchFills(date) {\n    let res = await fetch(this.query_by_date(date)).then((response) =>\n      response.json()\n    );\n    const DPM_docs = res.val;\n    let fills = states.map((state) => {\n      let doc = DPM_docs.find((doc) => doc[\"state_code\"] === state);\n\n      if (this.state.stat === \"deaths\") {\n        let deaths = undefined;\n        if (doc !== undefined) {\n          deaths = doc.new_deaths_per_million;\n        }\n        if (deaths && deaths > MAX_DEATHS) {\n          return \"#FF0000\";\n        }\n        return deaths === undefined ? \"#e5e5e5\" : colorScaleDeaths(deaths);\n      } else {\n        let cases = undefined;\n        if (doc !== undefined) {\n          cases = doc.new_cases_per_million;\n        }\n        if (cases && cases > MAX_CASES) {\n          return \"#FFA500\";\n        }\n        return cases === undefined ? \"#e5e5e5\" : colorScaleCases(cases); \n      }\n \n    });\n    this.setState({ fills });\n  }\n\n  toggleModal = async () => {\n    let setting = !this.state.modal;\n    await this.generateData(this.state.date, this.state.state);\n    this.setState({ modal: setting });\n  };\n\n  toggleStat = async () => {\n    if (this.state.stat === \"cases\"){\n      this.setState({stat: \"deaths\"});\n    } else {\n      this.setState({stat: \"cases\"});\n    }\n    await this.fetchFills(this.state.date)\n    this.forceUpdate()\n  }\n\n  buildQuery = (date, state) => {\n    return (\n      \"/us/\" +\n      state +\n      \"?date=\" +\n      date.getDate() +\n      \"_\" +\n      (date.getMonth() + 1) +\n      \"_\" +\n      (date.getYear() + 1900)\n    );\n  };\n\n  generateData = async (date, state) => {\n    if (state === undefined) {\n      return \"\";\n    }\n    let query = this.buildQuery(date, state);\n\n    let newData = await fetch(query).then((response) => response.json());\n    if (newData.error === \"Document not found\") {\n      newData[\"state\"] = state;\n      newData[\"date\"] = date;\n    }\n    this.setState({ data: newData });\n  };\n\n  render() {\n    return (\n      <div>\n        <h2 className=\"is-size-3 has-text-weight-bold has-text-centered\">\n          {this.state.date.toDateString().slice(4)}\n        </h2>\n        <Slider num_days={NUM_DAYS} update={this.updateVal} />\n        <div className=\"columns is-vcentered\">\n          <div className=\"column is-8\">\n            <LinearGradient data={(this.state.stat === \"cases\") ? gradientDataCases : gradientDataDeaths} />\n          </div>\n          <div className='column'>\n            <div onClick={() => this.setState({stat: \"cases\"})} className={(this.state.stat === \"cases\") ? \"is-warning button mx-2\" : \"button mx-2\"}>\n              <p>Cases</p>\n            </div>\n            <div onClick={() => this.setState({stat: \"deaths\"})} className={(this.state.stat === \"deaths\") ? \"is-danger button\" : \"button\"}>\n              <p >Deaths</p>\n            </div>\n          </div>\n        </div>\n        <div\n          className={this.state.modal === true ? \"modal is-active\" : \"modal\"}\n        >\n          <div onClick={this.toggleModal} className=\"modal-background\"></div>\n          <USModalCard\n            handle={() => this.setState({ modal: false })}\n            {...this.state.data}\n          />\n          <button\n            onClick={this.toggleModal}\n            className=\"modal-close is-large\"\n            aria-label=\"close\"\n          ></button>\n        </div>\n\n        <div className=\"card mb-5\">\n          <ComposableMap projection=\"geoAlbersUsa\">\n            <ZoomableGroup zoom={1}>\n              <Geographies geography={geoData}>\n                {({ geographies }) => (\n                  <>\n                    {geographies.map((geo, index) => (\n                      <Geography\n                        key={geo.rsmKey}\n                        stroke=\"#FFF\"\n                        geography={geo}\n                        fill={this.state === states[index] ? \"#ABCDEF\" : this.state.fills[index]}\n                        onMouseEnter={() =>\n                          this.setState({ state: states[index] })\n                        }\n                        onMouseLeave={() => this.setState({ state: undefined })}\n                        onClick={() => this.toggleModal()}\n                      />\n                    ))}\n                    {geographies.map((geo) => {\n                      const centroid = geoCentroid(geo);\n                      const cur = allStates.find((s) => s.val === geo.id);\n                      return (\n                        <g key={geo.rsmKey + \"-name\"}>\n                          {cur &&\n                            centroid[0] > -160 &&\n                            centroid[0] < -67 &&\n                            (Object.keys(offsets).indexOf(cur.id) === -1 ? (\n                              <Marker coordinates={centroid}>\n                                <text y=\"2\" fontSize={14} textAnchor=\"middle\">\n                                  {cur.id}\n                                </text>\n                              </Marker>\n                            ) : (\n                              <Annotation\n                                subject={centroid}\n                                dx={offsets[cur.id][0]}\n                                dy={offsets[cur.id][1]}\n                              >\n                                <text\n                                  x={4}\n                                  fontSize={14}\n                                  alignmentBaseline=\"middle\"\n                                >\n                                  {cur.id}\n                                </text>\n                              </Annotation>\n                            ))}\n                        </g>\n                      );\n                    })}\n                  </>\n                )}\n              </Geographies>\n            </ZoomableGroup>\n          </ComposableMap>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default USMap;\n","import React from \"react\";\nimport Cloud from \"./WordCloud.js\";\n\nconst CountryModalCard = (props) => {\n  let date = new Date(props.date);\n  date.setDate(date.getDate() + 1);\n  if (props.error === \"Document not found\") {\n    return (\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <p className=\"modal-card-title\">\n            <span className=\"has-text-weight-bold\">{props.code}</span>\n          </p>\n        </header>\n        <section className=\"modal-card-body\">\n          <p>\n            <span className=\"has-text-weight-bold\">Error:</span> Data not found\n            for {date.toDateString().slice(4)}.\n          </p>\n        </section>\n      </div>\n    );\n  }\n  if (props.new_cases !== undefined) {\n    return (\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <p className=\"modal-card-title\">\n            <span className=\"has-text-weight-bold\">{props.location} </span> |{\" \"}\n            {date.toDateString().slice(4)}\n          </p>\n        </header>\n        <section className=\"modal-card-body\">\n          <h3 className=\"has-text-weight-semibold is-size-4 mt-0 mb-2\">\n            COVID Factsheet\n          </h3>\n          <div className=\"columns\">\n            <div className=\"column is-4\">\n              <ul>\n                <li>\n                  <span class=\"icon\">\n                    <i class=\"fas fa-hospital\"></i>\n                  </span>\n                  <strong> New Cases:</strong>{\" \"}\n                  {props.new_cases.toLocaleString(\"en\")}\n                </li>\n                <li>\n                  <span class=\"icon\">\n                    <i class=\"fas fa-hospital-alt\"></i>\n                  </span>\n                  <strong> Total Cases:</strong>{\" \"}\n                  {props.total_cases.toLocaleString(\"en\")}\n                </li>\n                <li>\n                  <span class=\"icon\">\n                    <i class=\"fas fa-book-dead\"></i>\n                  </span>\n                  <strong> New Deaths:</strong>{\" \"}\n                  {props.new_deaths.toLocaleString(\"en\")}\n                </li>\n              </ul>\n            </div>\n            <div className=\"column\">\n              <ul>\n                <li>\n                  <span class=\"icon\">\n                    <i class=\"fas fa-virus\"></i>\n                  </span>\n                  <strong> New Cases Per Million:</strong>{\" \"}\n                  {props.new_cases_per_million.toLocaleString(\"en\")}\n                </li>\n\n                <li>\n                  <span class=\"icon\">\n                    <i class=\"fas fa-viruses\"></i>\n                  </span>\n                  <strong> Total Cases Per Million:</strong>{\" \"}\n                  {props.total_cases_per_million.toLocaleString(\"en\")}\n                </li>\n                <li>\n                  <span class=\"icon\">\n                    <i class=\"fas fa-skull-crossbones\"></i>\n                  </span>\n                  <strong> New Deaths Per Million:</strong>{\" \"}\n                  {props.new_deaths_per_million.toLocaleString(\"en\")}\n                </li>\n              </ul>\n            </div>\n          </div>\n          <h3 className=\"has-text-weight-semibold is-size-4 mt-0 mb-2\">\n            Viral Trends:\n          </h3>\n        <Cloud />\n        </section>\n        <section className=\"modal-card-foot\">\n          <p className=\"button is-warning\" onClick={props.handle}>\n            Close\n          </p>\n          {props.location === \"United States\" && (\n            <p className=\"button is-success\" onClick={props.handleUSA}>\n              View US Data\n            </p>\n          )}\n        </section>\n      </div>\n    );\n  } else {\n    return \"\";\n  }\n};\n\nexport default CountryModalCard;\n","import React, { Component } from \"react\";\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  ZoomableGroup,\n} from \"react-simple-maps\";\nimport { Container } from \"react-bulma-components\";\nimport { scaleLinear } from \"d3-scale\";\nimport Slider from \"./Slider\";\n\nimport LinearGradient from \"./LinearGradient.js\";\nimport CountryModalCard from \"./CountryModalCard\";\n\n// import '../data/countries.json'\n\nlet geoData = require(\"../data/countries.json\");\n\n// const geoUrl =\n//   \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst epoch = new Date(2020, 2, 1); // Start visualization from March 1st\n\n// number of days between march 1st and present\nconst end = new Date(2020, 6, 20)\nconst NUM_DAYS = (end.getTime() - epoch.getTime()) / (1000 * 3600 * 24);\n\nconst MAX_DEATHS = 5;\n\nconst MAX_CASES = 100;\n\nconst colorScaleDeaths = scaleLinear()\n  .domain([0, MAX_DEATHS])\n  .range([\"#e5e5e5\", \"#ff5233\"]);\n\nconst colorScaleCases = scaleLinear()\n  .domain([0, MAX_CASES])\n  .range([\"#e5e5e5\", \"#ffa500\"]);\n\n// Gradient Parameters\nconst gradientDataDeaths = {\n  title: \"Deaths per Million\",\n  fromColor: \"#e5e5e5\",\n  toColor: \"#ff5233\",\n  min: 0,\n  max: `${MAX_DEATHS}+`,\n};\n\nconst gradientDataCases = {\n  title: \"Cases per Million\",\n  fromColor: \"#e5e5e5\",\n  toColor: \"#FFA500\",\n  min: 0,\n  max: `${MAX_CASES}+`,\n};\n\n\n// 3 digit country codes, taken from the thing that made the map\nconst codes = geoData[\"objects\"][\"ne_110m_admin_0_countries\"][\"geometries\"].map(\n  (country) => country[\"properties\"][\"ISO_A3\"]\n);\n\n\nclass WorldMap extends Component {\n  constructor(props) {\n    super(props);\n    // initial fill is all gray\n    const gray = Array(177).fill(\"#e5e5e5\");\n\n    this.state = {\n      date: epoch,\n      fills: gray,\n      index: undefined,\n      modal: false,\n      data: undefined,\n      stat: \"cases\"\n    };\n\n    this.fetchFills = this.fetchFills.bind(this);\n    this.toggleModal = this.toggleModal.bind(this);\n    this.setIndex = this.setIndex.bind(this);\n    this.generateData = this.generateData.bind(this);\n    this.buildQuery = this.buildQuery.bind(this);\n    this.query_by_date = this.query_by_date.bind(this);\n    this.fetchFills(epoch);\n  }\n\n  updateVal = async (val) => {\n    let newDate = new Date(2020, 2, val);\n    this.setState({ date: newDate });\n    await this.fetchFills(this.state.date);\n    this.forceUpdate();\n  };\n\n  async fetchFills(date) {\n    let res = await fetch(this.query_by_date(date)).then((response) =>\n      response.json()\n    );\n    const DPM_docs = res.val;\n    let fills = codes.map((code) => {\n      let doc = DPM_docs.find((country) => country[\"country_code\"] === code);\n      if (this.state.stat === \"deaths\") {\n        let deaths = undefined;\n        if (doc !== undefined) {\n          deaths = doc.new_deaths_per_million;\n        }\n        if (deaths && deaths > MAX_DEATHS) {\n          return \"#FF0000\";\n        }\n        return deaths === undefined ? \"#e5e5e5\" : colorScaleDeaths(deaths);\n      } else {\n        let cases = undefined;\n        if (doc !== undefined) {\n          cases = doc.new_cases_per_million;\n        }\n        if (cases && cases > MAX_CASES) {\n          return \"#FFA500\";\n        }\n        return cases === undefined ? \"#e5e5e5\" : colorScaleCases(cases); \n      }\n    });\n    this.setState({ fills });\n  }\n\n  toggleModal = () => {\n    let setting = !this.state.modal;\n    this.setState({ modal: setting });\n    this.generateData(this.state.date, codes[this.state.index]);\n  };\n\n  setIndex = (ind) => {\n    this.setState({ index: ind });\n  };\n\n  buildQuery = (date, code) => {\n    return (\n      \"/world/\" +\n      code +\n      \"?date=\" +\n      date.getDate() +\n      \"_\" +\n      (date.getMonth() + 1) +\n      \"_\" +\n      (date.getYear() + 1900)\n    );\n  };\n\n  query_by_date = (date) => {\n    let querystring = undefined;\n    if (this.state.stat === \"deaths\") {\n      querystring = (\n        \"/world-dpm-by-date?date=\" +\n        date.getDate() +\n        \"_\" +\n        (date.getMonth() + 1) +\n        \"_\" +\n        (date.getYear() + 1900)\n      );\n    } else {\n      querystring = (\n        \"/world-cpm-by-date?date=\" +\n        date.getDate() +\n        \"_\" +\n        (date.getMonth() + 1) +\n        \"_\" +\n        (date.getYear() + 1900)\n      );\n    }\n    return querystring;\n  };\n\n  generateData = async (date, code) => {\n    if (code === undefined) {\n      return \"\";\n    }\n    let query = this.buildQuery(date, code);\n\n    let newData = await fetch(query).then((response) => response.json());\n    if (newData.error === \"Document not found\") {\n      newData[\"code\"] = code;\n      newData[\"date\"] = date;\n    }\n    this.setState({ data: newData });\n  };\n\n  handleUSA = () => {\n    this.setState({ modal: false });\n    this.props.switch();\n  };\n\n  render() {\n    return (\n      <Container>\n        <h1 className=\"is-size-3 has-text-weight-bold has-text-centered\">\n          {this.state.date.toDateString().slice(4)}\n        </h1>\n        <Slider num_days={NUM_DAYS} update={this.updateVal} />\n\n        <div\n          className={this.state.modal === true ? \"modal is-active\" : \"modal\"}\n        >\n          <div onClick={this.toggleModal} className=\"modal-background\"></div>\n          <CountryModalCard\n            handleUSA={this.handleUSA}\n            handle={() => this.setState({ modal: false })}\n            {...this.state.data}\n          />\n          <button\n            onClick={this.toggleModal}\n            className=\"modal-close is-large\"\n            aria-label=\"close\"\n          ></button>\n        </div>\n        <div className=\"columns is-vcentered\">\n          <div className=\"column is-8\">\n            <LinearGradient data={(this.state.stat === \"cases\") ? gradientDataCases : gradientDataDeaths} />\n          </div>\n          <div className='column'>\n            <div onClick={() => this.setState({stat: \"cases\"})} className={(this.state.stat === \"cases\") ? \"is-warning button mx-2\" : \"button mx-2\"}>\n              <p>Cases</p>\n            </div>\n            <div onClick={() => this.setState({stat: \"deaths\"})} className={(this.state.stat === \"deaths\") ? \"is-danger button\" : \"button\"}>\n              <p >Deaths</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"card mb-5\">\n          <ComposableMap>\n            <ZoomableGroup zoom={1}>\n              <Geographies geography={geoData}>\n                {({ geographies }) =>\n                  geographies.map((geo, index) => {\n                    return (\n                      <Geography\n                        key={geo.rsmKey}\n                        geography={geo}\n                        fill={this.state.index === index ? \"#ABCDEF\" : this.state.fills[index]}\n                        stroke=\"#FFF\"\n                        onMouseEnter={() => this.setIndex(index)}\n                        onMouseLeave={() => this.setIndex(undefined)}\n                        onClick={() => this.toggleModal()}\n                      />\n                    );\n                  })\n                }\n              </Geographies>\n            </ZoomableGroup>\n          </ComposableMap>\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default WorldMap;\n","import React from \"react\";\nimport { Footer, Level } from \"react-bulma-components\";\n\nconst MyFooter = () => {\n  return (\n    <Footer className=\"footer\">\n      <div className=\"content has-text-left-aligned columns mb-5\">\n        <div className=\"mb-5 column is-three-fifths is-offset-one-fifth\">\n          <strong>Contagion Tracker</strong> is a Skunkworks project designed to\n          1) visualize the spread of COVID-19 since inception, and 2) depict how\n          COVID-19 has become an inescapable object of our attentions. COVID-19\n          data was taken from the{\" \"}\n          <a href=\"https://www.covidtracking.com/\">COVID Tracking Project</a>{\" \"}\n          and&nbsp;\n          <a href=\"https://ourworldindata.org/coronavirus/\">\n            Our World in Data\n          </a>\n          . Twitter trends were scraped through calls to the Twitter API via{\" \"}\n          <a href=\"https://pypi.org/project/GetOldTweets3/\">GetOldTweets3</a>.\n          You can view the whole project (including source code and more\n          detailed documentation){\" \"}\n          <a href=\"https://github.com/gbuchdahl/contagion-tracker\">here</a>.\n        </div>\n      </div>\n      <div>\n        <Level className=\"level\">\n          <div className=\"level-item\">\n            <img src=\"../../img/mongodb.png\" alt=\"MongoDB\" width=\"200\"></img>\n          </div>\n          <div className=\"level-item\">\n            <img src=\"../../img/react.png\" alt=\"React\" width=\"170\"></img>\n          </div>\n          <div className=\"level-item\">\n            <img\n              src=\"../../img/d3.png\"\n              alt=\"Javascript D3 Library\"\n              width=\"75\"\n            ></img>\n          </div>\n          <div className=\"level-item\">\n            <img src=\"../../img/flask.png\" alt=\"Flask\" width=\"175\"></img>\n          </div>\n          <div className=\"level-item\">\n            <img\n              src=\"../../img/twitter.png\"\n              alt=\"Twitter Developer API\"\n              width=\"90\"\n            ></img>\n          </div>\n          <div className=\"level-item\">\n            <img\n              src=\"../../img/covid_tracking.png\"\n              alt=\"COVID Tracking Project\"\n              width=\"180\"\n            ></img>\n          </div>\n        </Level>\n      </div>\n    </Footer>\n  );\n};\n\nexport default MyFooter;\n","import React, { useState } from \"react\";\n// import './App.css';\n// import \"react-bulma-components/dist/react-bulma-components.min.css\";\nimport \"./css/main.css\";\nimport Banner from \"./components/Banner\";\nimport USMap from \"./components/USMap\";\nimport WorldMap from \"./components/WorldMap\";\nimport MyFooter from \"./components/Footer\";\n\nimport { Container, Tabs, Columns } from \"react-bulma-components\";\n\nfunction App() {\n  const [location, setLocation] = useState(\"Global\");\n\n  return (\n    <div className=\"App\">\n      <Banner />\n      <Container className=\"is-centered\">\n        <Columns>\n          <Columns.Column />\n          <Columns.Column className=\"is-four-fifths\">\n            <Tabs className=\"is-centered is-boxed\">\n              <ul>\n                <li\n                  className={\n                    location === \"USA\" ? \"is-active is-size-5\" : \"is-size-5\"\n                  }\n                >\n                  <a onClick={() => setLocation(\"USA\")}>\n                    US Data\n                  </a>\n                </li>\n                <li\n                  className={\n                    location === \"Global\" ? \"is-active is-size-5\" : \"is-size-5\"\n                  }\n                >\n                  <a onClick={() => setLocation(\"Global\")}>\n                    Global Data\n                  </a>\n                </li>\n              </ul>\n            </Tabs>\n          </Columns.Column>\n          <Columns.Column />\n        </Columns>\n        <Columns>\n          <Columns.Column />\n          <Columns.Column className=\"is-four-fifths\">\n            {location === \"USA\" ? (\n              <USMap />\n            ) : (\n              <WorldMap switch={() => setLocation(\"USA\")} />\n            )}\n          </Columns.Column>\n          <Columns.Column />\n        </Columns>\n      </Container>\n      <MyFooter />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}